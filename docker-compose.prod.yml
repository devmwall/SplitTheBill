# docker-compose.prod.yml
version: '3.8'

services:
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.prod
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
    environment:
      - MONGODB_URI=${MONGODB_URI}
      - OCR_API_KEY=${OCR_API_KEY}
      - OCR_API_ENDPOINT=${OCR_API_ENDPOINT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    deploy:
      replicas: 2
    environment:
      - VITE_API_URL=${VITE_API_URL}
      - VITE_BASE_URL=${VITE_BASE_URL}


  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    deploy:
      replicas: 2

  mongo:
    image: mongo:latest
    command: ["--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - mongodb_data:/data/db
    deploy:
      placement:
        constraints:
          - node.role == manager

  redis:
    image: redis:alpine
    deploy:
      replicas: 2
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

volumes:
  mongodb_data:
  redis_data:

networks:
  backend_network:
    driver: overlay
  frontend_network:
    driver: overlay