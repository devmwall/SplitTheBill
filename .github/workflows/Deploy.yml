name: Deploy to DigitalOcean
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Add a specific step for Docker login
      - name: Log in to DigitalOcean Container Registry
        uses: docker/login-action@v3
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          password: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Build images
        env:
          REGISTRY: registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY }}
        run: |
          # Build backend image
          docker build -t $REGISTRY/backend:${{ github.sha }} -t $REGISTRY/backend:latest ./backend
          
          # Build frontend image
          docker build -t $REGISTRY/frontend:${{ github.sha }} -t $REGISTRY/frontend:latest ./frontend

      - name: Push images
        env:
          REGISTRY: registry.digitalocean.com/${{ secrets.DIGITALOCEAN_REGISTRY }}
        run: |
          # Debug information
          echo "Docker config location:"
          ls -la ~/.docker/
          cat ~/.docker/config.json
          
          echo "Pushing images to $REGISTRY"
          
          # Push with error checking
          docker push $REGISTRY/backend:${{ github.sha }}
          docker push $REGISTRY/backend:latest
          docker push $REGISTRY/frontend:${{ github.sha }}
          docker push $REGISTRY/frontend:latest

      - name: Deploy to Droplet
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          script: |
            cd /opt/urlshortener
            
            # Login to DO registry on the droplet
            echo ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} | docker login registry.digitalocean.com -u ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }} --password-stdin
            
            # Update environment variables
            touch .env
            echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" > .env
            echo "OCR_API_KEY=${{ secrets.OCR_API_KEY }}" >> .env
            echo "OCR_API_ENDPOINT=${{ secrets.OCR_API_ENDPOINT }}" >> .env
            echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> .env
            echo "VITE_BASE_URL=${{ secrets.VITE_BASE_URL }}" >> .env
            echo "DIGITALOCEAN_REGISTRY=${{ secrets.DIGITALOCEAN_REGISTRY }}" >> .env
            echo "CHAT_GPT_API_KEY=${{ secrets.CHAT_GPT_API_KEY }}" >> .env

            # Pull latest images
            docker compose -f docker-compose.prod.yml pull

            # Restart services
            docker compose -f docker-compose.prod.yml up -d

            # Clean up old images
            docker image prune -f